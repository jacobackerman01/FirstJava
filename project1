echo "# FirstJava" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/jacobackerman01/FirstJava.git
git push -u origin main


import java.util.Scanner;

public class CollegeAdvisingSystem {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to the College Advising System!");
        System.out.print("Please enter your name: ");
        String studentName = scanner.nextLine();

        System.out.print("Please enter your major: ");
        String major = scanner.nextLine();

        System.out.print("Please enter your current GPA: ");
        double gpa = scanner.nextDouble();

        System.out.print("Please enter the number of completed credits: ");
        int completedCredits = scanner.nextInt();

        // Simulate course data based on the major (replace with a real database or data source)
        String[] availableCourses = getAvailableCourses(major);

        // Recommend courses based on GPA and major
        String[] recommendedCourses = recommendCourses(major, gpa);

        System.out.println("\nCourse Options for " + studentName + ":");
        for (int i = 0; i < availableCourses.length; i++) {
            System.out.println((i + 1) + ". " + availableCourses[i]);
        }

        System.out.println("\nRecommended Courses:");
        for (int i = 0; i < recommendedCourses.length; i++) {
            System.out.println((i + 1) + ". " + recommendedCourses[i]);
        }

        scanner.close();
    }

    // Replace this with a real course data source or database
    private static String[] getAvailableCourses(String major) {
        // Simulate available courses for the given major
        if (major.equals("Computer Science")) {
            return new String[]{"CS101: Introduction to Programming", "CS202: Data Structures", "CS303: Algorithms"};
        } else if (major.equals("Biology")) {
            return new String[]{"BIO101: General Biology", "BIO204: Cell Biology", "BIO307: Genetics"};
        } else {
            return new String[]{"Course data not available for this major."};
        }
    }

    private static String[] recommendCourses(String major, double gpa) {
        // Simulate course recommendations based on major and GPA
        if (major.equals("Computer Science")) {
            if (gpa >= 3.0) {
                return new String[]{"CS404: Artificial Intelligence", "CS405: Database Systems"};
            } else {
                return new String[]{"CS101: Introduction to Programming", "CS202: Data Structures"};
            }
        } else if (major.equals("Biology")) {
            if (gpa >= 3.2) {
                return new String[]{"BIO404: Molecular Biology", "BIO405: Microbiology"};
            } else {
                return new String[]{"BIO101: General Biology", "BIO204: Cell Biology"};
            }
        } else {
            return new String[]{"Course recommendations not available for this major."};
        }
    }
}
